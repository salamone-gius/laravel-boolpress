---------------------------------------------------- MAIL SERVER ------------------------------------------------------

Aggiungo l'invio automatico di una mail all'autore del post nel caso in cui ci sia un nuovo commento da approvare.
L'invio di mail di notifica viene gestito da un server a parte poiché si utilizzano protocolli diversi (protocollo SMTP).
Il protocollo SMTP (Simple Mail Transfer Protocol) viene utilizzato per SPEDIRE email attraverso internet, mentre per la LETTURA delle mail si utilizza principalmente il protocollo IMAP (il protocollo POP non viene più tanto utilizzato).
Pertanto si utilizzano porte diverse da 8000, di solito 2525.
In fase di sviluppo, per testare il funzionamento del server mail, si usano dei servizi esterni (server smtp esterno) che crea una sandbox in cui vengono catchate le mail inviate e ricevute (Mailtrap.io).


-   -   -   -   -   -   -   -   -   -   -   -   -    MAILTRAP    -   -   -   -   -   -   -   -   -   -   -   -   -   -

1. effettuo l'accesso su mailtrap.io e creo una nuova casella finta;

2. cliccando sulla nuova inbox si va alla parte di configurazione;

3. in questa parte, sotto la voce 'Integrations', seleziono il framework che devo utilizzare (Laravel 7+);

4. appare lo snippet di codice delle variabili d'ambiente da settare per utilizzare il mail server di mailtrap da copiare e incollare nella sezione già mezza predisposta del file .env:

    MAIL_MAILER=smtp
    MAIL_HOST=smtp.mailtrap.io
    MAIL_PORT=2525
    MAIL_USERNAME=42024991268c47
    MAIL_PASSWORD=5784d84e992f9a
    MAIL_ENCRYPTION=tls

    //  setto la voce MAIL_FROM_ADDRESS con la mail che risulterà come mittente (si può anche impostare in modo dinamico)
    MAIL_FROM_ADDRESS=noreply@boolpress.com

5. ogni volta che viene modificato il file .env, conviene sempre staccare il server, pulire la cache lanciando il comando dedicato e riavviare il server:

    php artisan config:clear

-   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -


----------------------------------------------- LARAVEL - SEND MAIL -------------------------------------------------

-   -   -   -   -   -   -   -   -   -   -   -    GENERO LA MAIL    -   -   -   -   -   -   -   -   -   -   -   -   -

1. creo la classe (oggetto Mailable) che rappresenta il messaggio mail che voglio inviare:

    php artisan make:mail CommentMail

2. in app > Mail viene generato il file CommentMail.php che contiene il metodo build() che restituisce la vista del messaggio che voglio inviare;

3. in resources > views creo una cartella 'mail' che conterrà i markup di tute le mail;

4. in resources > views > mail creo un file 'comment.blade.php' nel quale andrò ad inserire il testo e i dati della mail;

5. in app > Mail > CommentMail.php nel metodo build() inserisco il percorso per accedere al file comment.blade appena creato:

    public function build()
    {
        return $this->view('mail.comment');
    }

6. in resources > views > comment.blade.php scrivo il contenuto della vista della mail e i dati che la stessa conterrà (statici o dinamici);


-   -   -   -   -   -   -   -   -   -   -   -    INVIO LA MAIL    -   -   -   -   -   -   -   -   -   -   -   -   -

1. l'invio effettivo della mail verrà fatto dal Controller relativo all'entità in cui sono i dati da spedire;

2. in app > Http > Controllers > Api > CommentController.php imposto l'invio effettivo della mail:

    - importo la classe appena creata CommentMail:

        use App\Mail\CommentMail;

    - importo la Facades di supporto per l'invio delle mail:

        use Illuminate\Support\Facades\Mail;

    - all'interno del metodo store(), dopo aver validato, creato e salvato a db il nuovo commento, inserisco le istruzioni per inviare effettivamente la mail:

        // il to() rappresenta il destinatario della mail, send() crea un nuovo oggetto CommentMail partendo dalla sua classe e o invia
        Mail::to('prova@laravel.it')->send(new CommentMail());

3. faccio un test per vedere se funziona: inserisco un commento ad un post dell'utente Giuseppe (con mail 'prova@laravel.it') e vado a controllare se ho ricevuto la mail di notifica su Mailtrap.io;

4. in app > Http > Controllers > Api > CommentController.php, nel metodo store(), l'oggetto del Model Comment $newComment porta con sè le informazioni della tabella posts a cui è relazionata (quindi il singolo post a cui è legato il commento), singolo post che a sua volta porta con sè le informazioni della tabella users a cui è relazionata (quindi lo user a cui è legato il post):

    // nel metodo to() inserisco in modo dinamico la mail dell'autore del post utilizzando le relazioni tra commento->post->utente(autore-del-post)->email
    Mail::to($newComment->post->user->email)->send(new CommentMail());

5. in app > Http > Controllers > Api > CommentController.php nel metodo store() aggiungo un controllo se ci dovesse essere un problema con l'invio dell'email:

    try {
        Mail::to($newComment->post->user->email)->send(new CommentMail());
    } catch (\Throwable $th) {
        //throw $th;
    }
